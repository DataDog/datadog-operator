registry: "docker.io/datadog"
datadog:
  apiKey: "testapikey"
  appKey: "testappkey"
  expvarPort: "6000"
  clusterName: test

  logLevel: "debug"

  kubeStateMetricsCore:
    enabled: true
  useHostPID: true

  clusterChecks:
    enabled: true
    shareProcessNamespace: true

  nodeLabelsAsTags:
    beta.kubernetes.io/instance-type: aws-instance-type
  podLabelsAsTags:
    app: kube_app
  podAnnotationsAsTags:
    iam.amazonaws.com/role: kube_iamrole
  namespaceLabelsAsTags:
    env: environment
  tags:
    - "test:tag"
  checksCardinality: low

  # Deprecated APM keys for deprecation mapping tests
  apm:
    enabled: true               # deprecated -> should OR into apm.portEnabled
    useSocketVolume: true       # deprecated -> should map to apm.socketEnabled

  # Deprecated systemProbe deprecation scenario
  systemProbe:
    enableDefaultOsReleasePaths: true  # deprecated -> negates to disableDefaultOsReleasePaths=false

  # Deprecated processAgent scenario
  processAgent:
    enabled: true   # deprecated -> maps to processCollection

  # Remote configuration deprecation scenario
  remoteConfiguration:
    enabled: true

  # Credentials for mapSecretKeyName tests
  credentials:
    apiSecret:
      secretName: datadog-api-secret
    appSecret:
      secretName: datadog-app-secret

  # Cluster Agent token secret for mapSecretKeyName
  clusterAgentTokenSecret:
    secretName: datadog-ca-token

  # Features used by mapSystemProbeAppArmor
  features:
    cws:
      enabled: true
    npm:
      enabled: false
    tcpQueueLength:
      enabled: true
    gpu:
      enabled: true
      privilegedMode: true

  # Kubelet host as YAML string to test valueFrom parsing
  kubelet:
    tlsVerify: false
    host: |
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP

  dogstatsd:
    port: 1234
    originDetection: true
    useSocketVolume: true
    useHostPort: false
  prometheusScrape:
    additionalConfigs:
      - autodiscovery:
          kubernetes_annotations:
            include:
              custom_include_label: 'true'
            exclude:
              custom_exclude_label: 'true'
          kubernetes_container_names:
            - my-app
        configurations:
          - send_distribution_buckets: true
            timeout: 5
  otelCollector:
    enabled: true
    ports:
      - containerPort: 4317
        name: otel-grpc
        protocol: TCP
        # Default HTTP port of OTLP receiver
      - containerPort: 4318
        name: otel-http
        protocol: TCP

  # Existing confd block, used by mapping
  confd:
    http_check.yaml: |-
      init_config:
      instances:
        - name: "test"
          url: "https://google.com"

agents:
  # Deprecated networkPolicy key for multi-source OR test
  networkPolicy:
    create: true
  containers:
    agent:
      env:
        - name: DD_LOG_LEVEL
          value: "warn"
        - name: DD_USE_DOGSTATSD
          value: "true"
    system-probe:
      securityContext:
        seccompProfile: "localhost/system-probe"
      appArmorProfile: "unconfined"
  volumeMounts:
    - name: example
      mountPath: "this/is/a/volume/mount"
      readOnly: true
  volumes:
    - hostPath:
        path: "this/is/a/host/path"
      name: example

# Additional deprecated networkPolicy keys for multi-source OR test
clusterAgent:
  config:
    external_metrics:
      local_service_name: "my-local-ext-metrics-svc"
  networkPolicy:
    create: false
clusterChecksRunner:
  networkPolicy:
    create: false
