// Unless explicitly stated otherwise all files in this repository are licensed
// under the Apache License Version 2.0.
// This product includes software developed at Datadog (https://www.datadoghq.com/).
// Copyright 2016-2019 Datadog, Inc.

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/DataDog/datadog-operator/pkg/apis/datadoghq/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DatadogAgentDeploymentLister helps list DatadogAgentDeployments.
type DatadogAgentDeploymentLister interface {
	// List lists all DatadogAgentDeployments in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DatadogAgentDeployment, err error)
	// DatadogAgentDeployments returns an object that can list and get DatadogAgentDeployments.
	DatadogAgentDeployments(namespace string) DatadogAgentDeploymentNamespaceLister
	DatadogAgentDeploymentListerExpansion
}

// datadogAgentDeploymentLister implements the DatadogAgentDeploymentLister interface.
type datadogAgentDeploymentLister struct {
	indexer cache.Indexer
}

// NewDatadogAgentDeploymentLister returns a new DatadogAgentDeploymentLister.
func NewDatadogAgentDeploymentLister(indexer cache.Indexer) DatadogAgentDeploymentLister {
	return &datadogAgentDeploymentLister{indexer: indexer}
}

// List lists all DatadogAgentDeployments in the indexer.
func (s *datadogAgentDeploymentLister) List(selector labels.Selector) (ret []*v1alpha1.DatadogAgentDeployment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DatadogAgentDeployment))
	})
	return ret, err
}

// DatadogAgentDeployments returns an object that can list and get DatadogAgentDeployments.
func (s *datadogAgentDeploymentLister) DatadogAgentDeployments(namespace string) DatadogAgentDeploymentNamespaceLister {
	return datadogAgentDeploymentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DatadogAgentDeploymentNamespaceLister helps list and get DatadogAgentDeployments.
type DatadogAgentDeploymentNamespaceLister interface {
	// List lists all DatadogAgentDeployments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DatadogAgentDeployment, err error)
	// Get retrieves the DatadogAgentDeployment from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DatadogAgentDeployment, error)
	DatadogAgentDeploymentNamespaceListerExpansion
}

// datadogAgentDeploymentNamespaceLister implements the DatadogAgentDeploymentNamespaceLister
// interface.
type datadogAgentDeploymentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DatadogAgentDeployments in the indexer for a given namespace.
func (s datadogAgentDeploymentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DatadogAgentDeployment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DatadogAgentDeployment))
	})
	return ret, err
}

// Get retrieves the DatadogAgentDeployment from the indexer for a given namespace and name.
func (s datadogAgentDeploymentNamespaceLister) Get(name string) (*v1alpha1.DatadogAgentDeployment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("datadogagentdeployment"), name)
	}
	return obj.(*v1alpha1.DatadogAgentDeployment), nil
}
