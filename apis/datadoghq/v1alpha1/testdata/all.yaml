apiVersion: datadoghq.com/v1alpha1
kind: DatadogAgent
metadata:
  name: datadog
spec:
  clusterName: foo
  registry: public.ecr.aws/datadog
  credentials:
    apiKey: api-key-inline
    apiKeyExistingSecret: api-key-exist-secret
    apiSecret:
      secretName: datadog-secret
      keyName: api-key
    appKey: app-key-inline
    appKeyExistingSecret: app-key-existing-secret
    appSecret:
      secretName: datadog-secret
      keyName: app-key
    token: "foo-bar-baz" # ignored by conversion
    useSecretBackend: true
  features:
    orchestratorExplorer:
      enabled: true
      conf:
        configMap:
          name: orch-cm
          fileKey: config.yaml
      clusterCheck: true
      scrubbing:
        containers: true
      additionalEndpoints: '{"https://process.agent.datadoghq.com": ["apikey1"]}' # ignored ATM
      ddUrl: https://orch-explorer.com
      extraTags:
        - orch
        - exp
    kubeStateMetricsCore:
      enabled: true
      conf:
        configMap:
          name: cluster-agent-ksm-conf
      clusterCheck: true
    prometheusScrape:
      enabled: true
      serviceEndpoints: true
      additionalConfigs: |-
        - autodiscovery:
            kubernetes_annotations:
              include:
                custom_label: 'true'
            kubernetes_container_names:
            - my-app
          configurations:
          - send_distribution_buckets: true
            timeout: 5
    networkMonitoring:
      enabled: false
  agent:
    enabled: true
    useExtendedDaemonset: true #ignored ATM
    image:
      name: myagent
      tag: mytag
      jmxEnabled: true
      pullPolicy: Always
      pullSecrets: null
    daemonsetName: test-ds-agent
    rbac:
      create: true
      serviceAccountName: datadog-agent-scc
    deploymentStrategy:
      updateStrategyType: RollingUpdate
      rollingUpdate:
        maxUnavailable: 10
        maxPodSchedulerFailure: 10
        maxParallelPodCreation: 1
        slowStartIntervalDuration: 2h
        slowStartAdditiveIncrease: 1h
      canary: null
      reconcileFrequency: 1s
    additionalAnnotations:
      foo: bar
      baz: foo
    additionalLabels:
      bar: foo
      foo: baz
    priorityClassName: my-prio-class
    dnsPolicy: None
    dnsConfig:
      nameservers:
        - ns1
    hostNetwork: false
    hostPID: true
    env:
      - name: TEST_VAR_DS
        value: TEST_VALUE_DS
    config:
      ddUrl: custom-agent.com
      logLevel: DEBUG-LL # ignored
      confd:
        configMapName: agent-confd
      checksd:
        configMapName: agent-checksd
      podLabelsAsTags:
        custom-tag1: custom-tag1
      podAnnotationsAsTags:
        custom-tag2: custom-tag2
      tags:
        - hostTag1
        - hostTag2
      collectEvents: true
      leaderElection: true #ignored
      env:
        - name: TEST_VAR_CONT
          value: TEST_VALUE_CONT
      volumeMounts:
        - name: agent-volumeMount
      volumes:
        - name: agent-volume
      resources:
        limits:
          cpu: 400m
      command: ["custom-agent", "start"]
      args: ["config", "foo.yaml"]
      livenessProbe:
        initialDelaySeconds: 30
      readinessProbe:
        timeoutSeconds: 10
      healthPort: 42
      dogstatsd:
        dogstatsdOriginDetection: true
        unixDomainSocket:
          enabled: true
      tolerations:
        - operator: Exists
      securityContext:
        runAsUser: 0
        seLinuxOptions:
          level: s0
          role: system_r
          type: spc_t
          user: system_u
      criSocket:
        criSocketPath: /var/run/crio/crio.sock
        dockerSocketPath: /var/docker.sock
      hostPort: 420
      kubelet:
        tlsVerify: false
    apm:
      enabled: true
      unixDomainSocket:
        enabled: true
      hostPort: 9000
    process:
      enabled: true
      processCollectionEnabled: true
    log:
      enabled: true
    systemProbe:
      bpfDebugEnabled: true
      secCompCustomProfileConfigMap: seccomp-configmap
      secCompProfileName: localhost/seccomp-profile
      secCompRootPath: /custom/root/path
    security:
      compliance:
        enabled: true
      runtime:
        enabled: false
  clusterAgent:
    replicas: 2
    config:
      securityContext:
        runAsUser: 0
        seLinuxOptions:
          level: s0
          role: system_r
          type: spc_t
          user: system_u
      externalMetrics:
        enabled: true
        clusterChecksEnabled: true
      admissionController:
        enabled: true
        mutateUnlabelled: true
        serviceName: "test-svc-name"
        agentCommunicationMode: "hostip"
      confd:
        configMapName: cluster-agent-confd
        items:
          - key: test
            path: test.d/test.yaml
  clusterChecksRunner:
    enabled: true
    image:
      name: myagent
      tag: mytag
      jmxEnabled: true
      pullPolicy: Always
      pullSecrets: null
    deploymentName: "test-clc-name"
    config:
      securityContext:
        runAsUser: 0
        seLinuxOptions:
          level: s0
          role: system_r
          type: spc_t
          user: system_u
    customConfig:
      configData: "custom-conf-clc"
    rbac:
      create: true
      serviceAccountName: datadog-agent-clc
    replicas: 10
    additionalAnnotations:
      foo: bar
      baz: foo
    additionalLabels:
      bar: foo
      foo: baz
    priorityClassName: clc-prio-class
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    tolerations:
      - operator: Foo
    nodeSelector:
      nodeName: clc
    networkPolicy:
      create: true
      flavor: kubernetes
      dnsSelectorEndpoints:
        - matchLabels:
          component: redis
